/* /styles/Admin.module.css */
/* Assumes base_styles.css is imported globally */

/* --- Header Specific --- */
.header {
  /* Base styles from base_styles.css are assumed */
  /* Add Admin-specific header styles if any */
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.5rem; /* Mobile padding */
  background-color: var(--highlight-color);
  color: var(--highlight-text-color);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.header h1 {
  margin: 0;
  font-size: 1.25rem; /* Mobile header size */
  color: var(--highlight-text-color);
  font-weight: 600;
}

.userInfo, .headerButtons {
  display: flex;
  align-items: center;
  gap: 1rem;
}

/* --- Button Specifics (using base classes) --- */
.logoutButton {
  composes: button button-destructive from global; /* Use composes if using CSS Modules */
  /* Or apply classes directly: className={`${styles.button} ${styles.buttonDestructive}`} */
}

.backButton {
  composes: button button-secondary from global;
}

.createButton {
  composes: button button-primary from global;
}

.editButton {
  composes: button button-primary from global;
  padding: 0.4rem 0.8rem; /* Specific smaller padding */
  font-size: 0.9rem;
}

.deleteButton {
  composes: button button-destructive from global;
  padding: 0.4rem 0.8rem; /* Match edit button size */
  font-size: 0.9rem;
}

.saveButton {
  composes: button button-primary from global;
}

.cancelButton {
  composes: button button-secondary from global;
}

.cardButton {
  composes: button button-secondary from global;
}

/* --- Layout & Content Specific --- */
.grid {
  display: grid;
  grid-template-columns: 1fr; /* Mobile default */
  gap: 1.5rem;
}

.card {
  composes: card-base from global;
  transition: transform 0.3s ease;
}

.card:hover {
  transform: translateY(-5px);
}

.card h2 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-size: 1.2rem;
}

.card p {
  margin-bottom: 1rem;
  color: var(--muted-text-color);
}

.tableContainer {
  composes: card-base from global;
  overflow-x: auto; /* Allow horizontal scroll on mobile */
}

.tableContainer h2 {
  margin-top: 0;
  margin-bottom: 1rem;
  font-size: 1.2rem;
}

.table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 1rem;
}

.table th,
.table td {
  padding: 0.75rem 1rem;
  text-align: left;
  border-bottom: 1px solid var(--border-color-light);
  font-size: 0.95rem;
  vertical-align: middle;
  white-space: nowrap; /* Default nowrap for mobile scroll */
}

.table th {
  background-color: var(--table-header-bg);
  font-weight: 600;
  color: var(--text-color);
  white-space: normal; /* Allow header wrap */
}

.table td:last-child,
.table th:last-child {
  white-space: normal; /* Allow last column wrap */
}

.actions {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.noData {
  composes: card-base from global;
  text-align: center;
  color: var(--muted-text-color);
  background-color: #f9f9f9; /* Slightly different background */
}

.formContainer {
  composes: card-base from global;
}

.formContainer h2 {
  margin-top: 0;
  margin-bottom: 1rem;
  font-size: 1.2rem;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* Use .input-base for inputs */
.formInput {
  composes: input-base from global;
}

.formTextarea {
  composes: input-base from global;
  min-height: 80px;
  resize: vertical;
}

.formButtons {
  display: flex;
  flex-direction: column; /* Stack on mobile */
  gap: 0.75rem;
  margin-top: 1rem;
}

.filterContainer {
  margin-bottom: 1.5rem;
  display: flex;
  flex-direction: column; /* Stack on mobile */
  gap: 0.5rem;
}

.filterContainer label {
  font-weight: 500;
}

.filterSelect {
  composes: input-base from global;
}

/* --- Media Queries for Admin --- */
@media (min-width: 600px) {
  .grid {
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }

  .formButtons {
     flex-direction: row;
     justify-content: flex-end;
     gap: 1rem;
  }

  .filterContainer {
     flex-direction: row;
     align-items: center;
     gap: 1rem;
   }

   .filterSelect {
     min-width: 250px;
     width: auto;
   }

   .table th,
   .table td {
     white-space: normal; /* Allow wrapping */
   }
}

@media (min-width: 992px) {
  .header {
    padding: 1rem 2rem;
  }

  .header h1 {
    font-size: 1.5rem;
  }
}

